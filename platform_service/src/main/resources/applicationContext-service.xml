<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
">
    <!--    <import resource="applicationContext-dao.xml"/>-->
    <!--1.开启组件扫描-->
    <context:component-scan base-package="com.platform">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--2.声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--声明数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--3.配置事务-->
    <aop:config>
        <!--定义切点表达式-->
        <aop:pointcut id="allMethodPointcut"
                      expression="execution(* com.platform.backend.service.*.*(..)) || execution(* com.platform.developer.service.*.*(..))"/>
        <!--引用切点表达式 并进行事务增强-->
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="allMethodPointcut"/>
    </aop:config>
    <!--4.进行事务增强的方法-->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <!--对增删改已存在的事务进行事务提交-->
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="do*" propagation="REQUIRED" rollback-for="Exception"/>
            <!--对查询或者其他方法进行事务回滚-->
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--5.开启事务注解驱动，告诉spring使用注解管理事务，创建代理对象
               transaction-manager :事务管理器对象的id-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--6.开启proxy-target-class="true" 会使用 cglib 继承的方式去创建代理-->
    <aop:config proxy-target-class="true"/>

    <!--7.开启Aspect生成代理对象-->
    <aop:aspectj-autoproxy/>

</beans>